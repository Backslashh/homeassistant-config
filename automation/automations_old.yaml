---
#################################################################
## HASS related
#################################################################
- id: hass_start_notification
  alias: NOTIFY (START) Home Assistant
  initial_state: 'on'
  condition:
  - condition: state
    entity_id: input_boolean.text_notifications
    state: 'on'
  trigger:
  - platform: homeassistant
    event: start
  action:
  - service: notify.mobile_app_william
    data:
      title: ''
      message: Home Assistant Started

- id: 'sync_bedroom_lamp_state'
  alias: "Sync Bedroom Lamps States"
  initial_state: true
  trigger:
    platform: homeassistant
    event: start
  action:
    - service: mqtt.publish
      data:
        topic: "tasmotas/cmnd/state"
        payload: ""

- id: set_theme_day_night
  alias: 'Set HA theme for day and night'
  trigger:
    - platform: homeassistant
      event: start
    - platform: state
      entity_id: sun.sun
      to: above_horizon
    - platform: state
      entity_id: sun.sun
      to: below_horizon
  action:
    - service_template: frontend.set_theme
      data_template:
        name: >
          {% if states.sun.sun.state == "above_horizon" %}
            clear
          {% else %}
            slate
          {% endif %}

#################################################################
## Presence detection
#################################################################
- id: notify_resident_emily
  alias: NOTIFY (Location) Resident
  initial_state: 'on'
  condition:
  - condition: state
    entity_id: input_boolean.text_notifications
    state: 'on'
  - condition: template
    value_template: '{{ trigger.from_state.state != trigger.to_state.state }}'
  trigger:
  - platform: state
    entity_id: person.emily
  action:
  - service: notify.mobile_app_william
    data_template:
      message: '{{ trigger.from_state.attributes.friendly_name }} is {% if trigger.to_state.state == ''home'' %}at home{% elif trigger.to_state.state == ''not_home'' %}away{%else %}at {{ trigger.to_state.state }}{% endif %}.'
      data:
        channel: Presence
        color: blue

- id: notify_resident_william
  alias: NOTIFY (Location) Resident
  initial_state: 'on'
  condition:
  - condition: state
    entity_id: input_boolean.text_notifications
    state: 'on'
  - condition: template
    value_template: '{{ trigger.from_state.state != trigger.to_state.state }}'
  trigger:
  - platform: state
    entity_id: person.william
  action:
  - service: notify.mobile_app_emily
    data_template:
      message: '{{ trigger.from_state.attributes.friendly_name }} is {% if trigger.to_state.state == ''home'' %}at home{% elif trigger.to_state.state == ''not_home'' %}away{%else %}at {{ trigger.to_state.state }}{% endif %}.'
      data:
        channel: Presence
        color: blue

- id: notify_guest_deb
  alias: Notify when Deb has arrived
  trigger:
    platform: state
    entity_id: person.deb
    to: 'home'
  condition:
  - condition: state
    entity_id: input_boolean.text_notifications
    state: 'on'
  - condition: template
    value_template: '{{ trigger.from_state.state != trigger.to_state.state }}'
  action:
    service: notify.parents
    data:
      message: 'Deb is here!'
      data:
        channel: Presence
        color: blue
#################################################################
## Door Notifications
#################################################################
- id: notify_garage_door
  alias: Notify Garage door
  initial_state: 'on'
  condition:
  - condition: state
    entity_id: input_boolean.text_notifications
    state: 'on'
  - condition: template
    value_template: '{{ trigger.from_state.state != trigger.to_state.state }}'
  trigger:
  - platform: state
    entity_id: binary_sensor.garage_door
  action:
  - service: notify.parents
    data_template:
      message: '{{ trigger.from_state.attributes.friendly_name }} is {% if trigger.to_state.state == ''off'' %}closed{% else %}open{% endif %}.'

- id: notify_garage_open_10_min
  alias: Notify Garage open for 10 min
  initial_state: 'on'
  condition:
  - condition: state
    entity_id: input_boolean.text_notifications
    state: 'on'
  - condition: template
    value_template: '{{ trigger.from_state.state != trigger.to_state.state }}'
  trigger:
  - platform: state
    entity_id: binary_sensor.garage_door
    to: 'on'
    for:
      minutes: 10
  action:
  - service: notify.parents
    data:
      message: Garage door has been open for 10 minutes! Close it!

#################################################################
## Home Security
#################################################################
- id: alarm_triggered_away
  alias: Trigger alarm while armed away
  condition:
  - condition: state
    entity_id: alarm_control_panel.home_alarm
    state: armed_away
  trigger:
  - platform: state
    entity_id: binary_sensor.kitchen_sensor_motion
    to: 'on'
  - platform: state
    entity_id: binary_sensor.garage_door
    to: 'on'
  - platform: state
    entity_id: binary_sensor.back_door
    to: 'on'
  action:
    service: alarm_control_panel.alarm_trigger
    entity_id: alarm_control_panel.home_alarm

- id: alarm_notify
  alias: Send notification when alarm triggered
  condition:
  - condition: state
    entity_id: input_boolean.text_notifications
    state: 'on'
  trigger:
  - platform: state
    entity_id: alarm_control_panel.home_alarm
    to: triggered
  action:
  - service: notify.parents
    data:
      message: ALARM! The alarm has been triggered at {{ states('sensor.date_time') }}
      data:
        ttl: 0
        priority: high
  - service: tts.google_cloud_say
    entity_id: media_player.kitchen_display
    data:
      message: Warning. Please leave the premesis. Police have been notified.
      data:
        channel: Alarm
        color: red
  - service: light.turn_on
    data:
      entity_id:
      - light.kitchen_pendant_lights
      - light.lounge_room_lamp
      - light.55404001dc4f22ac01ca
      - light.bedroom_lamp_left
      - light.ollie_s_lamp
      - light.teddy_s_lamp
      brightness: 255
      rgb_color:
      - 255
      - 0
      - 0
      flash: long

- id: alarm_notify_disarmed
  alias: Send notification when alarm is Disarmed
  condition:
  - condition: state
    entity_id: input_boolean.text_notifications
    state: 'on'
  trigger:
  - platform: state
    entity_id: alarm_control_panel.home_alarm
    to: disarmed
  action:
  - service: tts.google_cloud_say
    entity_id: media_player.kitchen_display
    data:
      message: Alarm is now disarmed.
  - service: notify.parents
    data_template:
      message: The alarm is now Disarmed. {{ states('sensor.date_time') }}
      data:
        channel: Alarm
        color: red


- id: alarm_notify_pending
  alias: Send notification when alarm is in pending status
  condition:
  - condition: state
    entity_id: input_boolean.text_notifications
    state: 'on'
  trigger:
  - platform: state
    entity_id: alarm_control_panel.home_alarm
    to: pending
  action:
  - service: notify.parents
    data_template:
      message: The alarm is in pending status. {{ states('sensor.date_time') }}
      data:
        channel: Alarm
        color: red

- id: alarm_notify_armed_away
  alias: Send notification when alarm is Armed in Away mode
  condition:
  - condition: state
    entity_id: input_boolean.text_notifications
    state: 'on'
  trigger:
  - platform: state
    entity_id: alarm_control_panel.home_alarm
    to: armed_away
  action:
  - service: tts.google_cloud_say
    entity_id: media_player.kitchen_display
    data:
      message: Alarm has been armed.
  - service: notify.parents
    data_template:
      message: 'Alarm is now armed. {{ states(''sensor.date_time'') }}'
      data:
        channel: Alarm
        color: red

- id: alarm_notify_armed_home
  alias: Send notification when alarm is Armed in Home mode
  trigger:
  - platform: state
    entity_id: alarm_control_panel.home_alarm
    to: armed_home
  action:
  - service: notify.parents
    data_template:
      message: 'Alarm is now armed. {{ states(''sensor.date_time'') }}'
      data:
        channel: Alarm
        color: red

- id: alarm_disable_when_arriving
  alias: Alarm disarm when return home
  condition:
  - condition: state
    entity_id: alarm_control_panel.home_alarm
    state: pending
  trigger:
  - platform: state
    entity_id: person.william
    from: not_home
    to: home
  - platform: state
    entity_id: person.emily
    from: not_home
    to: home
  action:
  - service: notify.parents
    data_template:
      message: Disarming the alarm at {{ states('sensor.date_time') }}
  - service: tts.google_cloud_say
    entity_id: media_player.kitchen_display
    data:
      message: Disarming Alarm.
  - service: alarm_control_panel.alarm_disarm
    entity_id: alarm_control_panel.home_alarm
    data:
      code: !secret alarm_code

- id: arm_alarm_when_away
  alias: Arm alarm when away and not armed
  condition:
  - condition: state
    entity_id: input_boolean.guest_mode
    state: 'off'
  trigger:
  - platform: state
    entity_id: group.family
    to: not_home
    for:
      minutes: 15
  action:
  - service: notify.parents
    data:
      message: "No one is at home, do you want to arm the alarm?"
      data:
        actions:
          - action: "arm_alarm"
            title: "Arm Alarm"
          - action: dismiss_prompt
            title: "No"
        tag: alarm_prompt

- id: mobile_action_dismiss_prompt
  alias: Dismiss prompt to arm alarm
  trigger:
  - platform: event
    event_type: mobile_app_notification_action
    event_data:
      action: dismiss_prompt
  action:
  - service: notify.parents
    data:
      message: clear_notification
      data:
        tag: alarm_prompt

- id: mobile_action_arm_alarm
  alias: Arm Alarm from Notificaiton Action
  trigger:
  - platform: event
    event_type: mobile_app_notification_action
    event_data:
      action: arm_alarm
  action:
  - service: alarm_control_panel.alarm_arm_away
    entity_id: alarm_control_panel.home_alarm
  - service: notify.parents
    data:
      message: clear_notification
      data:
        tag: alarm_prompt

#################################################################
## Object Detection
#################################################################
- id: front_door_object_detection
  alias: Detect Object at the front door
  trigger:
  - entity_id: binary_sensor.front_door_motion
    platform: state
    to: 'on'
  - entity_id: binary_sensor.front_door_motion
    platform: state
    to: 'on'
  condition:
  - condition: state
    entity_id: input_boolean.text_notifications
    state: 'on'
  action:
  - service: camera.snapshot
    data:
      entity_id: camera.front_door
      filename: /config/www/tmp/image.jpg
  - delay: 00:00:02
  - service: image_processing.scan
    entity_id: image_processing.deepstack_detector
  - service: image_processing.scan
    entity_id: image_processing.face_detection

- id: face_recognised
  alias: Face recognised
  condition:
  - condition: state
    entity_id: input_boolean.text_notifications
    state: 'on'
  trigger:
    platform: event
    event_type: image_processing.detect_face
  action:
    - service_template: >-
        {% if not is_state('sensor.front_door_face' , 'unavailable') %} 
        notify.parents
        {% endif %}
      data_template:
        message: "{{ states('sensor.front_door_face') }} is at the front door"
        data:
          image: !secret temp_image
          clickAction: !secret front_door_cam_stream
          actions:
            - action: "URI"
              title: View Image
              uri: !secret temp_image
    - service_template: >-
        {% if not is_state('sensor.front_door_detection' , 'unavailable') %}
        tts.google_cloud_say
        {% endif %}
      data_template:
        entity_id: media_player.kitchen_display
        message: "{{ states('sensor.front_door_detection') }} is at the front door"

- id: object_detection_notification
  alias: Notify when object is detected
  initial_state: 'on'
  condition:
  - condition: state
    entity_id: input_boolean.text_notifications
    state: 'on'
  - condition: template
    value_template: '{{ as_timestamp(now()) - (as_timestamp(state_attr("automation.notify_when_object_is_detected", "last_triggered")) or 0) > 60 }}'
  trigger:
  - platform: event
    event_type: deepstack.object_detected
    event_data:
      object: person
  - platform: event
    event_type: deepstack.object_detected
    event_data:
      object: car
  action:
  - service: notify.parents
    data_template:
      message: '{{ trigger.event.data.name | title }} detected {% if trigger.event.data.name == ''person'' %}at the front door{% else %}in the driveway{% endif %}.'
      data:
        image: !secret deepstack_latest_image
        clickAction: !secret front_door_cam_stream
        actions:
        - action: "URI"
          title: View Image
          uri: !secret deepstack_latest_image
        channel: Persence
        color: blue


#################################################################
## ZigBee Stuff
#################################################################
- id: zigbee2mqtt_log_level
  alias: Zigbee2mqtt Log Level
  initial_state: 'on'
  trigger:
    platform: state
    entity_id: input_select.zigbee2mqtt_log_level
  action:
  - service: mqtt.publish
    data:
      payload_template: '{{ states(''input_select.zigbee2mqtt_log_level'') }}'
      topic: zigbee2mqtt/bridge/config/log_level
- id: zigbee_join_enabled
  alias: Zigbee Join Enabled
  trigger:
    platform: state
    entity_id: switch.zigbee2mqtt_main_join
    to: 'on'
  action:
    service: timer.start
    entity_id: timer.zigbee_permit_join
- id: zigbee_join_disabled
  alias: Zigbee Join Disabled
  trigger:
  - platform: event
    event_type: timer.finished
    event_data:
      entity_id: timer.zigbee_permit_join
  - platform: state
    entity_id: switch.zigbee2mqtt_main_join
    to: 'off'
  action:
  - service: timer.cancel
    data:
      entity_id: timer.zigbee_permit_join
  - service: switch.turn_off
    entity_id: switch.zigbee2mqtt_main_join
- id: "zigbee2mqtt_create_notification_on_successfull_interview"
  alias: Zigbee Device Joined Notification
  trigger:
    platform: mqtt
    topic: 'zigbee2mqtt/bridge/log'
  condition:
    condition: template
    value_template: '{{trigger.payload_json.type == "pairing" and trigger.payload_json.message == "interview_successful"}}'
  action:
    - service: persistent_notification.create
      data_template:
        title: Device joined the zigbee2mqtt network
        message: "Name: {{trigger.payload_json.meta.friendly_name}},
                  Vendor: {{trigger.payload_json.meta.vendor}},
                  Description: {{trigger.payload_json.meta.description}}"

#################################################################
## Garbage Collection Notification
#################################################################
- id: 'garbage_general_notification'
  alias: Garbage General Notificaiton
  trigger:
    platform: time
    at: "19:30:00"
  condition:
    - condition: state
      entity_id: input_boolean.garbage_general
      state: 'off'
    - condition: state
      entity_id: sensor.garbage_general
      state: 'tomorrow'
  action:
    - service: notify.parents
      data:
        message: "Take the general bin out"
        data:
          actions:
            - action: "confirm_garbage_general"
              title: "Confirm"
          tag: garbage_general
          ttl: 0
          priority: high
          channel: Garbage
          color: green

- id: 'garbage_general_reminder'
  alias: Garbage General reminder
  trigger:
    platform: time_pattern
    minutes: '/30'
  condition:
    - condition: state
      entity_id: input_boolean.garbage_general
      state: 'off'
    - condition: state
      entity_id: sensor.garbage_general
      state: 'tomorrow'
    - condition: time
      after: '20:00:00'
      before: '23:59:00'
  action:
    service: notify.parents
    data:
      message: "It looks like general bin isn't out yet. Don't forget!"
      data:
        actions: 
          - action: "confirm_garbage_general"
            title: "Confirm"
        tag: garbage_general
        ttl: 0
        priority: high
        channel: Garbage
        color: green

- id: 'mark_garbage_general_done'
  alias: Mark general bin as done
  trigger:
    platform: event
    event_type: mobile_app_notification_action
    event_data:
      action: 'confirm_garbage_general'
  action:
    - service: input_boolean.turn_on
      entity_id: input_boolean.garbage_general
    - service: notify.parents
      data:
        message: clear_notification
        data:
          tag: garbage_general

- id: 'garbage_recycling_notification'
  alias: Garbage Recycling Notificaiton
  trigger:
    platform: time
    at: "19:30:00"
  condition:
    - condition: state
      entity_id: input_boolean.garbage_recycling
      state: 'off'
    - condition: state
      entity_id: sensor.garbage_recycling
      state: 'tomorrow'
  action:
    - service: notify.parents
      data:
        message: "Take the recycling bin out"
        data:
          actions:
            - action: "confirm_garbage_recycling"
              title: "Confirm"
          tag: garbage_recycling
          ttl: 0
          priority: high
          channel: Garbage
          color: green

- id: 'garbage_recycling_reminder'
  alias: Garbage Recycling reminder
  trigger:
    platform: time_pattern
    minutes: '/30'
  condition:
    - condition: state
      entity_id: input_boolean.garbage_recycling
      state: 'off'
    - condition: state
      entity_id: sensor.garbage_recycling
      state: 'tomorrow'
    - condition: time
      after: '20:00:00'
      before: '23:59:00'
  action:
    service: notify.parents
    data:
      message: "It looks like recycling bin isn't out yet. Don't forget!"
      data:
        actions: 
          - action: "confirm_garbage_recycling"
            title: "Confirm"
        tag: garbage_recycling
        ttl: 0
        priority: high
        channel: Garbage
        color: green

- id: 'mark_garbage_recycling_done'
  alias: Mark recycling bin as done
  trigger:
    platform: event
    event_type: mobile_app_notification_action
    event_data:
      action: 'confirm_garbage_recycling'
  action:
    - service: input_boolean.turn_on
      entity_id: input_boolean.garbage_recycling
    - service: notify.parents
      data:
        message: clear_notification
        data:
          tag: garbage_recycling

- id: 'test'
  alias: Test Notification engine
  trigger:
    platform: state
    entity_id: input_boolean.test_notification
    to: 'on'    
  action:
    - service: script.notify_engine
      data_template:
        title: 'Test message'
        value1: 'Helo there,'
        value2: 'This is value 2'
        who: 'william'
        channel: 'test'
        color: 'red'
        action_1: 'URI'
        action_1_title: 'test action'
        action_1_uri: 'https://youtube.com'


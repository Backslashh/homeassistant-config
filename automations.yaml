#################################################################
## HASS related
#################################################################
- id: hass_start_notification
  alias: NOTIFY (START) Home Assistant
  initial_state: 'on'
  hide_entity: true
  condition:
  - condition: state
    entity_id: input_boolean.options_notifications_push
    state: 'on'
  trigger:
  - platform: homeassistant
    event: start
  action:
  - service: notify.mobile_app_william
    data:
      title: ''
      message: Home Assistant Started

#################################################################
## Presence detection
#################################################################
- id: notify_resident
  alias: NOTIFY (Location) Resident
  initial_state: 'on'
  hide_entity: true
  condition:
  - condition: state
    entity_id: input_boolean.options_notifications_push
    state: 'on'
  - condition: template
    value_template: '{{ trigger.from_state.state != trigger.to_state.state }}'
  trigger:
  - platform: state
    entity_id: person.william
  - platform: state
    entity_id: person.emily
  action:
  - service: notify.all_devices
    data_template:
      message: '{{ trigger.from_state.attributes.friendly_name }} is {% if trigger.to_state.state == ''home'' %}at home{% elif trigger.to_state.state == ''not_home'' %}away{% else %}at {{ trigger.to_state.state }}{% endif %}.'

- id: notify_garage_door
  alias: Notify Garage door
  initial_state: 'on'
  hide_entity: true
  condition:
  - condition: state
    entity_id: input_boolean.options_notifications_push
    state: 'on'
  - condition: template
    value_template: '{{ trigger.from_state.state != trigger.to_state.state }}'
  trigger:
  - platform: state
    entity_id: binary_sensor.garage_door
  action:
  - service: notify.all_devices
    data_template:
      message: '{{ trigger.from_state.attributes.friendly_name }} is {% if trigger.to_state.state == ''off'' %}closed{% else %}open{% endif %}.'

- id: notify_garage_open_10_min
  alias: Notify Garage open for 10 min
  initial_state: 'on'
  hide_entity: true
  condition:
  - condition: state
    entity_id: input_boolean.options_notifications_push
    state: 'on'
  - condition: template
    value_template: '{{ trigger.from_state.state != trigger.to_state.state }}'
  trigger:
  - platform: state
    entity_id: binary_sensor.garage_door
    to: 'on'
    for:
      minutes: 10
  action:
  - service: notify.all_devices
    data:
      message: Garage door has been open for 10 minutes! Close it!

#################################################################
## Home Security
#################################################################
- id: alarm_triggered_away
  alias: Trigger alarm while armed away
  condition:
  - condition: state
    entity_id: alarm_control_panel.home_alarm
    state: armed_away
  trigger:
  - platform: state
    entity_id: binary_sensor.kitchen_sensor_motion
    to: 'on'
  - platform: state
    entity_id: binary_sensor.garage_door
    to: 'on'
  - platform: state
    entity_id: binary_sensor.back_door
    to: 'on'
  action:
    service: alarm_control_panel.alarm_trigger
    entity_id: alarm_control_panel.home_alarm

- id: alarm_notify
  alias: Send notification when alarm triggered
  condition:
  - condition: state
    entity_id: input_boolean.options_notifications_push
    state: 'on'
  trigger:
  - platform: state
    entity_id: alarm_control_panel.home_alarm
    to: triggered
  action:
  - service: notify.all_devices
    data:
      message: ALARM! The alarm has been triggered at {{ states('sensor.date_time') }}
  - service: tts.google_say
    entity_id: media_player.kitchen_display
    data:
      message: Warning. Please leave the premesis. Police have been notified.
  - service: light.turn_on
    data:
      entity_id:
      - group.kitchen_lights
      - light.34856070bcddc23658e4
      - light.55404001dc4f22ac01ca
      - light.55404001dc4f22ac0486
      - light.ollie_s_lamp
      - light.teddy_s_lamp
      brightness: 255
      rgb_color:
      - 255
      - 0
      - 0
      flash: long

- id: alarm_notify_disarmed
  alias: Send notification when alarm is Disarmed
  condition:
  - condition: state
    entity_id: input_boolean.options_notifications_push
    state: 'on'
  trigger:
  - platform: state
    entity_id: alarm_control_panel.home_alarm
    to: disarmed
  action:
  - service: tts.google_say
    entity_id: media_player.kitchen_display
    data:
      message: Alarm is now disarmed.
  - service: notify.all_devices
    data_template:
      message: ALARM! The alarm is Disarmed at {{ states('sensor.date_time') }}

- id: alarm_notify_pending
  alias: Send notification when alarm is in pending status
  condition:
  - condition: state
    entity_id: input_boolean.options_notifications_push
    state: 'on'
  trigger:
  - platform: state
    entity_id: alarm_control_panel.home_alarm
    to: pending
  action:
  - service: notify.all_devices
    data_template:
      message: ALARM! The alarm is in pending status at {{ states('sensor.date_time') }}

- id: alarm_notify_armed_away
  alias: Send notification when alarm is Armed in Away mode
  condition:
  - condition: state
    entity_id: input_boolean.options_notifications_push
    state: 'on'
  trigger:
  - platform: state
    entity_id: alarm_control_panel.home_alarm
    to: armed_away
  action:
  - service: tts.google_say
    entity_id: media_player.kitchen_display
    data:
      message: Alarm has been armed.
  - service: notify.all_devices
    data_template:
      message: ALARM! The alarm is armed in Away mode {{ states('sensor.date_time') }}

- id: alarm_notify_armed_home
  alias: Send notification when alarm is Armed in Home mode
  trigger:
  - platform: state
    entity_id: alarm_control_panel.home_alarm
    to: armed_home
  action:
  - service: notify.all_devices
    data_template:
      message: 'ALARM! The alarm is armed in Home mode {{ states(''sensor.date_time'') }}'

- id: alarm_disable_when_arriving
  alias: Alarm disarm when return home
  condition:
  - condition: state
    entity_id: alarm_control_panel.home_alarm
    state: pending
  trigger:
  - platform: state
    entity_id: person.william
    from: not_home
    to: home
  - platform: state
    entity_id: person.emily
    from: not_home
    to: home
  action:
  - service: notify.all_devices
    data_template:
      message: Disarming the alarm at {{ states('sensor.date_time') }}
  - service: tts.google_say
    entity_id: media_player.kitchen_display
    data:
      message: Disarming Alarm.
  - service: alarm_control_panel.alarm_disarm
    entity_id: alarm_control_panel.home_alarm
    data:
      code: !secret alarm_code

#################################################################
## Object Detection
#################################################################
- id: front_door_camera_scan
  alias: Scan still image from from door
  trigger:
  - entity_id: binary_sensor.front_door_motion_sensor
    platform: state
    to: 'on'
  condition:
  - condition: state
    entity_id: input_boolean.options_notifications_push
    state: 'on'
  action:
  - delay: 00:00:01
  - service: camera.snapshot
    data:
      entity_id: camera.front_door
      filename: /config/www/tmp/image.jpg
  - delay: 00:00:02
  - service: image_processing.scan
    entity_id: image_processing.facebox_saved_image
  - service: image_processing.scan
    entity_id: image_processing.deepstack_person_detector
  - service: image_processing.scan
    entity_id: image_processing.deepstack_car_detector
  - service: notify.telegram
    data:
      message: Motion detected at the front door

- id: face_recognised
  alias: Face recognised
  condition:
    - condition: state
      entity_id: input_boolean.options_notifications_push
      state: 'on'
    - condition: template
      value_template: "{{ trigger.event.data.confidence|float > 50 }}"
  trigger:
    platform: event
    event_type: image_processing.detect_face
  action:
    - service_template: >-
        {% if not is_state('sensor.front_door_detection' , 'unavailable') %} 
        notify.all_devices
        {% endif %}
      data_template:
        message: "{{ states('sensor.front_door_detection') }} is at the front door"
        data: 
        android:
          notification:
            image: !secret deepstack_latest_person
    - service_template: >-
        {% if not is_state('sensor.front_door_detection' , 'unavailable') %}
        tts.google_say
        {% endif %}
      data_template:
        entity_id: media_player.kitchen_display
        message: "{{ states('sensor.front_door_detection') }} is at the front door" 

- id: person_detection
  alias: Notify when person detected
  initial_state: 'on'
  hide_entity: true
  condition:
  - condition: state
    entity_id: input_boolean.options_notifications_push
    state: 'on'
  trigger:
    platform: event
    event_type: image_processing.object_detected
    event_data:
      object: person
  action:
    - delay: 00:00:02
    - service: notify.all_devices
      data_template:
        message: '{{ trigger.event.data.object }} detected at the front door ({{ trigger.event.data.confidence }}% confidence).'
        data:
          android:
            notification:
              image: '{{ states.camera.deepstack_latest_person.attributes.file_path }}'
    - service: notify.telegram
      data_template:
        message: '{{ trigger.event.data.object }} detected at the front door'
        data:
          photo: 
            - file: '{{ states.camera.deepstack_latest_person.attributes.file_path }}'
              caption: Person Detected

- id: car_detection
  alias: Notify when car detected
  initial_state: 'on'
  hide_entity: true
  condition:
  - condition: state
    entity_id: input_boolean.options_notifications_push
    state: 'on'
  trigger:
    platform: event
    event_type: image_processing.object_detected
    event_data:
      object: car
  action:
    - delay: 00:00:02
    - service: notify.all_devices
      data_template:
        message: '{{ trigger.event.data.object }} detected at the front door ({{ trigger.event.data.confidence }}% confidence).'
        data:
          android:
            notification:
              image: '{{ states.camera.deepstack_latest_car.attributes.file_path }}'
    - service: notify.telegram
      data_template:
        message: '{{ trigger.event.data.object }} detected at the front door'
        data:
          photo: 
            - file: '{{ states.camera.deepstack_latest_car.attributes.file_path }}'
              caption: Car Detected
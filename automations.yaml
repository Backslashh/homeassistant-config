#################################################################
## HASS related
#################################################################
- id: hass_start_notification
  alias: NOTIFY (START) Home Assistant
  initial_state: 'on'
  condition:
  - condition: state
    entity_id: input_boolean.options_notifications_push
    state: 'on'
  trigger:
  - platform: homeassistant
    event: start
  action:
  - service: notify.mobile_app_william
    data:
      title: ''
      message: Home Assistant Started

#################################################################
## Presence detection
#################################################################
- id: notify_resident_emily
  alias: NOTIFY (Location) Resident
  initial_state: 'on'
  condition:
  - condition: state
    entity_id: input_boolean.options_notifications_push
    state: 'on'
  - condition: template
    value_template: '{{ trigger.from_state.state != trigger.to_state.state }}'
  trigger:
  - platform: state
    entity_id: person.emily
  action:
  - service: notify.mobile_app_william
    data_template:
      message: '{{ trigger.from_state.attributes.friendly_name }} is {% if trigger.to_state.state == ''home'' %}at home{% elif trigger.to_state.state == ''not_home'' %}away{% else %}at {{ trigger.to_state.state }}{% endif %}.'

- id: notify_resident_william
  alias: NOTIFY (Location) Resident
  initial_state: 'on'
  condition:
  - condition: state
    entity_id: input_boolean.options_notifications_push
    state: 'on'
  - condition: template
    value_template: '{{ trigger.from_state.state != trigger.to_state.state }}'
  trigger:
  - platform: state
    entity_id: person.william
  action:
  - service: notify.mobile_app_emily
    data_template:
      message: '{{ trigger.from_state.attributes.friendly_name }} is {% if trigger.to_state.state == ''home'' %}at home{% elif trigger.to_state.state == ''not_home'' %}away{% else %}at {{ trigger.to_state.state }}{% endif %}.'

- id: notify_garage_door
  alias: Notify Garage door
  initial_state: 'on'
  condition:
  - condition: state
    entity_id: input_boolean.options_notifications_push
    state: 'on'
  - condition: template
    value_template: '{{ trigger.from_state.state != trigger.to_state.state }}'
  trigger:
  - platform: state
    entity_id: binary_sensor.garage_door
  action:
  - service: notify.all_devices
    data_template:
      message: '{{ trigger.from_state.attributes.friendly_name }} is {% if trigger.to_state.state == ''off'' %}closed{% else %}open{% endif %}.'

- id: notify_garage_open_10_min
  alias: Notify Garage open for 10 min
  initial_state: 'on'
  condition:
  - condition: state
    entity_id: input_boolean.options_notifications_push
    state: 'on'
  - condition: template
    value_template: '{{ trigger.from_state.state != trigger.to_state.state }}'
  trigger:
  - platform: state
    entity_id: binary_sensor.garage_door
    to: 'on'
    for:
      minutes: 10
  action:
  - service: notify.all_devices
    data:
      message: Garage door has been open for 10 minutes! Close it!


- id: request_location_update
  alias: Request Location Update
  trigger:
    - platform: state
      entity_id: input_boolean.locaion_update
      to: 'on'
  action:
  - service: notify.all_devices
    data:
      message: request_locaiton_update

- id: reset_location_update
  alias: Reset Location Update
  trigger:
  - platform: state
    entity_id: input_boolean.locaion_update
    to: 'on'
    for:
      seconds: 5
  action:
  - service: homeassistant.turn_off
    entity_id: input_boolean.locaion_update

#################################################################
## Home Security
#################################################################
- id: alarm_triggered_away
  alias: Trigger alarm while armed away
  condition:
  - condition: state
    entity_id: alarm_control_panel.home_alarm
    state: armed_away
  trigger:
  - platform: state
    entity_id: binary_sensor.kitchen_sensor_motion
    to: 'on'
  - platform: state
    entity_id: binary_sensor.garage_door
    to: 'on'
  - platform: state
    entity_id: binary_sensor.back_door
    to: 'on'
  action:
    service: alarm_control_panel.alarm_trigger
    entity_id: alarm_control_panel.home_alarm

- id: alarm_notify
  alias: Send notification when alarm triggered
  condition:
  - condition: state
    entity_id: input_boolean.options_notifications_push
    state: 'on'
  trigger:
  - platform: state
    entity_id: alarm_control_panel.home_alarm
    to: triggered
  action:
  - service: notify.all_devices
    data:
      message: ALARM! The alarm has been triggered at {{ states('sensor.date_time') }}
  - service: tts.google_say
    entity_id: media_player.kitchen_display
    data:
      message: Warning. Please leave the premesis. Police have been notified.
  - service: light.turn_on
    data:
      entity_id:
      - group.kitchen_lights
      - light.34856070bcddc23658e4
      - light.55404001dc4f22ac01ca
      - light.55404001dc4f22ac0486
      - light.ollie_s_lamp
      - light.teddy_s_lamp
      brightness: 255
      rgb_color:
      - 255
      - 0
      - 0
      flash: long

- id: alarm_notify_disarmed
  alias: Send notification when alarm is Disarmed
  condition:
  - condition: state
    entity_id: input_boolean.options_notifications_push
    state: 'on'
  trigger:
  - platform: state
    entity_id: alarm_control_panel.home_alarm
    to: disarmed
  action:
  - service: tts.google_say
    entity_id: media_player.kitchen_display
    data:
      message: Alarm is now disarmed.
  - service: notify.all_devices
    data_template:
      message: ALARM! The alarm is Disarmed at {{ states('sensor.date_time') }}

- id: alarm_notify_pending
  alias: Send notification when alarm is in pending status
  condition:
  - condition: state
    entity_id: input_boolean.options_notifications_push
    state: 'on'
  trigger:
  - platform: state
    entity_id: alarm_control_panel.home_alarm
    to: pending
  action:
  - service: notify.all_devices
    data_template:
      message: ALARM! The alarm is in pending status at {{ states('sensor.date_time') }}

- id: alarm_notify_armed_away
  alias: Send notification when alarm is Armed in Away mode
  condition:
  - condition: state
    entity_id: input_boolean.options_notifications_push
    state: 'on'
  trigger:
  - platform: state
    entity_id: alarm_control_panel.home_alarm
    to: armed_away
  action:
  - service: tts.google_say
    entity_id: media_player.kitchen_display
    data:
      message: Alarm has been armed.
  - service: notify.all_devices
    data_template:
      message: ALARM! The alarm is armed in Away mode {{ states('sensor.date_time') }}

- id: alarm_notify_armed_home
  alias: Send notification when alarm is Armed in Home mode
  trigger:
  - platform: state
    entity_id: alarm_control_panel.home_alarm
    to: armed_home
  action:
  - service: notify.all_devices
    data_template:
      message: 'ALARM! The alarm is armed in Home mode {{ states(''sensor.date_time'') }}'

- id: alarm_disable_when_arriving
  alias: Alarm disarm when return home
  condition:
  - condition: state
    entity_id: alarm_control_panel.home_alarm
    state: pending
  trigger:
  - platform: state
    entity_id: person.william
    from: not_home
    to: home
  - platform: state
    entity_id: person.emily
    from: not_home
    to: home
  action:
  - service: notify.all_devices
    data_template:
      message: Disarming the alarm at {{ states('sensor.date_time') }}
  - service: tts.google_say
    entity_id: media_player.kitchen_display
    data:
      message: Disarming Alarm.
  - service: alarm_control_panel.alarm_disarm
    entity_id: alarm_control_panel.home_alarm
    data:
      code: !secret alarm_code

- id: mobile_action_arm_alarm
  alias: Arm Alarm from Notificaiton Action
  trigger:
    - platform: event
      event_type: mobile_app_notification_action
      event_data:
        action: arm_alarm
  action:
  - service: alarm_control_panel.alarm_arm_away
    entity_id: alarm_control_panel.home_alarm

#################################################################
## Object Detection
#################################################################
- id: front_door_camera_detection
  alias: Detect motion at front door
  trigger:
  - entity_id: sensor.front_door_alert_id
    platform: state
  condition:
  - condition: state
    entity_id: input_boolean.options_notifications_push
    state: 'on'
  action:
  - service: notify.all_devices
    data_template:
      message: "{{ states('sensor.front_door_object') | title }} detected at the front door."
      data:
        clickAction: !secret zm_live_stream 
        image: !secret zm_alert_image
        actions:
          - action: "URI"
            title: View Image
            uri: !secret zm_alert_image

- id: front_door_object_detection
  alias: Detect Object at the front door
  trigger:
    - entity_id: sensor.front_door_alert_id
      platform: state
  condition:
    - condition: state
      entity_id: input_boolean.options_notifications_push
      state: 'on'
  action:
  - service: camera.snapshot
    data:
      entity_id: camera.front_door
      filename: /config/www/tmp/image.jpg
  - delay: 00:00:02
  - service: image_processing.scan
    entity_id: image_processing.deepstack_detector
  - service: image_processing.scan
    entity_id: image_processing.facebox_saved_image

- id: face_recognised
  alias: Face recognised
  condition:
    - condition: state
      entity_id: input_boolean.options_notifications_push
      state: 'on'
    - condition: template
      value_template: "{{ trigger.event.data.confidence|float > 20 }}"
  trigger:
    platform: event
    event_type: image_processing.detect_face
  action:
    - service_template: >-
        {% if not is_state('sensor.front_door_detection' , 'unavailable') %} 
        notify.all_devices
        {% endif %}
      data_template:
        message: "{{ states('sensor.front_door_detection') }} is at the front door"
        #data:
        #  image: !secret deepstack_person_detector_file
    - service_template: >-
        {% if not is_state('sensor.front_door_detection' , 'unavailable') %}
        tts.google_say
        {% endif %}
      data_template:
        entity_id: media_player.kitchen_display
        message: "{{ states('sensor.front_door_detection') }} is at the front door"

- id: person_detection
  alias: Notify when person detected
  initial_state: 'on'
  condition:
  - condition: state
    entity_id: input_boolean.options_notifications_push
    state: 'on'
  trigger:
    platform: event
    event_type: image_processing.object_detected
    event_data:
      object: person
  action:
    - service: notify.mobile_app_william
      data_template:
        message: '{{ trigger.event.data.object }} detected at the front door ({{ trigger.event.data.confidence }}% confidence).'
        data:
          image: !secret deepstack_latest_person
          clickAction: !secret zm_live_stream
          actions:
            - action: "URI"
              title: View Image
              uri: !secret deepstack_latest_person

      
- id: car_detection
  alias: Notify when car detected
  initial_state: 'on'
  condition:
  - condition: state
    entity_id: input_boolean.options_notifications_push
    state: 'on'
  trigger:
    platform: event
    event_type: image_processing.object_detected
    event_data:
      object: car
  action:
    - service: notify.mobile_app_william
      data_template:
        message: '{{ trigger.event.data.object }} detected in the driveway.'
        data:
          image: !secret deepstack_latest_object
          clickAction: !secret zm_live_stream
          actions:
            - action: "URI"
              title: View Image
              uri: !secret deepstack_latest_car

#################################################################
## Light Automations
#################################################################
- id: turn_on_kitchen_lights_when_lumens_low
  alias: Turn on kitchen lights when lumens are low
  initial_state: 'on'
  condition:
  - condition: time
    before: '16:00:00'
  trigger:
    platform: numeric_state
    entity_id: sensor.kitchen_sensor_light_level
    below: 90
  action:
    service: light.turn_on
    entity_id: group.kitchen_lights

- id: light_on_at_sunset
  alias: Turn on all lights at sunset
  initial_state: 'on'
  condition:
  - condition: state
    entity_id: group.household
    state: home
  - condition: numeric_state
    entity_id: sensor.kitchen_sensor_light_level
    below: 90
  trigger:
    platform: sun
    event: sunset
    offset: "-00:45:00"
  action:
    service: light.turn_on
    entity_id: group.all_lights

- id: dim_kitchen_lights_when_no_movement
  alias: Dim kitchen light 10 minutes after last movement
  condition:
  - condition: time
    after: '18:30:00'
  trigger:
    platform: state
    entity_id: sensor.motion_sensor
    to: 'off'
    for:
      minutes: 10
  action:
    service: scene.turn_on
    entity_id: scene.kitchen_dim

- id: turn_off_kitchen_lights_when_no_movement
  alias: Turn off kitchen light 10 minutes after last movement
  condition:
  - condition: time
    after: '19:50:00'
  trigger:
    platform: state
    entity_id: sensor.motion_sensor
    to: 'off'
    for:
      minutes: 10
  action:
    - service: light.turn_off
      entity_id: group.kitchen_lights

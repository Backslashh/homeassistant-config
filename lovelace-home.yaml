
##########################################################################
#                                                                        #
#                              * SETTINGS *                              #
#                                                                        #
##########################################################################

custom_header:
  exceptions:
    - conditions:
        query_string: kiosk
      config:
        kiosk_mode: false

preload_cards:
  [map, iframe, markdown]
preload_rows:
  [input-select-entity]

anchors:
  ⚓₁: &title
    entity: sensor.placeholder
    tap_action:
      action: none
    hold_action:
      action: none
    type: state-label
  ⚓₂: &title-style
    color: '#bcbebf'
    font-family: SF Text
    font-size: 2.4vw
    font-weight: 500
    max-width: 1px
    cursor: default

button_card_templates:
  base:
    aspect_ratio: 1/1
    show_state: true
    show_icon: false

  light:
    state: &button_state
      - value: 'on'
        styles:
          card: [background-color: 'rgba(255, 255, 255, 0.8)']
          name: [color: 'rgba(0, 0, 0, 0.6)']
          state: [color: 'rgba(0, 0, 0, 0.6)']
    custom_fields:
      info: >
        [[[ if (entity.state == 'on' && entity.attributes.brightness) {
        const brightness = Math.round(entity.attributes.brightness / 2.54);
        const radius = 20.5; const circumference = radius * 2 * Math.PI; 
        return `<svg viewBox="0 0 50 50"><circle cx="25" cy="25" r="${radius}" stroke="#b2b2b2" stroke-width="1.5" fill="none" style="
        transform: rotate(-90deg); transform-origin: 50% 50%; stroke-dasharray: ${circumference}; stroke-dashoffset: ${circumference - brightness / 100 * circumference};" />
        <text x="50%" y="54%" fill="#8d8e90" font-size="14" text-anchor="middle" alignment-baseline="middle">${brightness}<tspan font-size="10">%</tspan></text></svg>`; } ]]]
    styles:
      name: &button_styles_name
        [top: 57.7%, left: 11%, position: absolute, line-height: 2vw]
      state: &button_styles_state
        [top: 74%, left: 11%, position: absolute, line-height: 2vw]
      custom_fields:
        info: &circle_pos
          [top: 8.5%, left: 56.2%, width: 3.5vw, position: absolute, letter-spacing: 0.03vw]
      card: &button_styles_card
        [font-family: Sf Display, letter-spacing: 0.05vw, text-rendering: optimizeLegibility, font-weight: 400, color: 'rgba(255, 255, 255, 0.3)', font-size: 1.34vw, 
        background-color: 'rgba(115, 115, 115, 0.2)', border-radius: 0.8vw, box-shadow: none, transition: none]
    tap_action:
      ui_sound: &ui_sound |
        [[[ if (entity.state === 'off' && states['switch.fullykiosk_screensaver'].state === 'off') {
        hass.callService('media_player', 'play_media', {entity_id: 'media_player.tablet', media_content_id: '/local/sound/on.m4a', media_content_type: 'music'}); }
        else if (entity.state === 'on' && states['switch.fullykiosk_screensaver'].state === 'off') {
        hass.callService('media_player', 'play_media', {entity_id: 'media_player.tablet', media_content_id: '/local/sound/off.m4a', media_content_type: 'music'}); } ]]]
      action: toggle
      haptic: light
    hold_action:
      action: call-service
      service: browser_mod.popup
      service_data:
        title: '[[[ return entity.attributes.friendly_name ]]]'
        deviceID: this
        card:
          type: entities
          entities:
            - type: custom:light-popup-card
              entity: '[[[ return entity.entity_id ]]]'
              icon: none
              fullscreen: false
              brightnessWidth: 130px
              brightnessHeight: 360px
              borderRadius: 1.7em
              sliderColor: '#c7c7c7'
              sliderTrackColor: rgba(25, 25, 25, 0.9)
              actionSize: 4.5em
              actionsInARow: 2
              style: |
                #popup {
                  margin: -2.4em 0 1.4em 0; }
                #popup > div.range-holder > input[type=range] {
                  cursor: grab; }
                #brightnessValue {
                  color: rgba(255, 255, 255, 0.8); margin: -1.9em 0 0 0; font-size: 2em; font-weight: 400; 
                  position: absolute; z-index: 100; font-family: SF Display; letter-spacing: 0.02em; pointer-events: none; 
                  mix-blend-mode: difference; text-align:center; width: 3.4em; height: 3.4em; }
                #popup > div.range-holder > input[type=range]::-webkit-slider-thumb {
                  border: 0; eight: 0; width: 0; cursor: grabbing; }
                #popup > div.action-holder > div > div {
                  margin: 0.8em 0.5em -0.8em 0.5em; }
                #popup > div.action-holder > div:last-child > div:last-child > .color {
                  background: radial-gradient(circle, rgba(255,255,255,1) 0%, rgba(255,255,255,0) 80%), 
                  conic-gradient(rgb(120,39,230), rgb(230,34,231), rgb(228,5,136), rgb(228,25,25), rgb(229,105,30), rgb(232,226,46), 
                  rgb(125,230,41), rgb(52,232,40), rgb(51,231,92), rgb(52,232,224),rgb(32,125,229), rgb(18,39,229), rgb(120,39,230));
                  border-width: 2px; border-color: #e6e6e6; --size: 4.4em !important; }
              actions:
                - service: light.turn_on
                  service_data:
                    entity_id: '[[[ return entity.entity_id ]]]'
                    color_temp: 153
                  color: "#d8d9e1"
                - service: light.turn_on
                  service_data:
                    entity_id: '[[[ return entity.entity_id ]]]'
                    color_temp: 326
                  color: "#d5b08d"
                - service: light.turn_on
                  service_data:
                    entity_id: '[[[ return entity.entity_id ]]]'
                    color_temp: 500
                  color: "#ce944b"
                - service: browser_mod.popup
                  service_data:
                    title: '[[[ return entity.attributes.friendly_name ]]]'
                    deviceID: this
                    card:
                      type: entities
                      show_header_toggle: false
                      entities:
                        - entity: '[[[ return entity.entity_id ]]]'
                          secondary_info: last-changed
                        - type: custom:light-entity-card
                          entity: '[[[ return entity.entity_id ]]]'
                          brightness: false
                          color_temp: true
                          full_width_sliders: true
                          hide_header: true
                          show_slider_percent: true
                          smooth_color_wheel: true
                          consolidate_entities: true
  climate:
    state: *button_state
    styles:
      name: *button_styles_name
      state: *button_styles_state
      card: *button_styles_card
    tap_action:
      ui_sound: *ui_sound
      haptic: light
    hold_action:
      action: call-service
      service: browser_mod.popup
      service_data:
        title: '[[[ return entity.attributes.friendly_name ]]]'
        deviceID: this
        card:
          type: thermostat
          entity: '[[[ return entity.entity_id ]]]'

  switch:
    state: *button_state
    styles:
      name: *button_styles_name
      state: *button_styles_state
      card: *button_styles_card
    tap_action:
      ui_sound: *ui_sound
      haptic: light

  icon_action:
    color: '#9da0a2'
    styles:
      card:
        [background: '#FFFFFF10', border-radius: 0.6em, box-shadow: none, 
        transition: none, width: 4em, height: 3.7em]

  name_action:
    styles:
      name:
        [display: flex, align-items: center, justify-content: center, margin-top: 0.5px]
      card:
        [background: '#FFFFFF10', color: '#9da0a2', border-radius: 0.6em, box-shadow: none, 
        transition: none, width: 100%, padding: 1em 1.4em 1em 1.2em, font-size: 1.06em, 
        font-weight: 500, letter-spacing: 0.015em]
    style: '#name > ha-icon {width: 1.4em; margin-right: 0.3em; }'

  media:
    state_display: >
      [[[ if (entity.attributes.media_title === 'Nothing playing' || entity.attributes.media_title === 'No title' && entity.state === 'paused' ) { return 'Nothing is playing'; }
      if (entity.attributes.media_title === 'No title' && entity.state === 'playing') { return 'No title'; }
      else { return entity.attributes.media_title; } ]]]
    custom_fields:
      media_image: >
        <svg viewBox="0 0 50 50" />
      blur: >
        [[[ if (entity.attributes.entity_picture != null) {
        return '<svg viewBox="0 0 50 50" />'; } ]]]
      overlay: >
        [[[ if (entity.state != 'off' && entity.state != 'idle' && entity.state != 'standby' && entity.state != 'unavailable') {
        return '<svg viewBox="0 0 50 50" />'; } ]]]
      play_pause: >
        [[[ const style = `<style>.scale-up { animation: scale-up 0.3s; cubic-bezier(.05,.5,.3,1) 1; transform-origin: center center; }
        @keyframes scale-up { 0% { opacity: 0; transform: scale(0); } 100% { opacity: 1; transform: scale(1); } }</style>`;
        if (entity.state === 'playing') { return `<svg viewBox="0 0 166 166">${style}<path class="scale-up" d="M0 0h59.9v166H0zm106.1 0H166v166h-59.9z"/></svg>`; }
        if (entity.state === 'paused') { return `<svg viewBox="0 0 166 166">${style}<path class="scale-up" d="M0 0l166 83L0 166z"/></svg>`; } ]]]
    tap_action: &media_tap_action
      sound: >
        [[[ if (states['switch.fullykiosk_screensaver'].state === 'off') {
        if (entity.state != 'off' || entity.state != 'idle' || entity.state != 'standby')
        hass.callService('media_player', 'play_media', {entity_id: 'media_player.tablet', media_content_id: '/local/sound/popup.m4a', media_content_type: 'music'}); } ]]]
      action: >
        [[[ if (entity.state === 'off' || entity.state === 'idle' || entity.state === 'standby') {
        return 'none'; } else { return 'call-service'; } ]]]
      service: media_player.media_play_pause
      service_data:
        entity_id: '[[[ return entity.entity_id ]]]'
      haptic: light
    styles:
      custom_fields:
        media_image:
          [background-image:
          "[[[ return entity.attributes.entity_picture == null ? 'linear-gradient(0deg, rgba(115, 115, 115, 0.2) 0%, rgba(115, 115, 115, 0.2) 100%)' 
          : 'linear-gradient(0deg, rgba(13,17,19,0.9) 0%, rgba(13,17,19,0) 50%), url(' + entity.attributes.entity_picture + ')'; ]]]", 
          background-size: cover, top: 0%, left: 0%, width: 100%, position: absolute]
        blur:
          [background-image:
          "[[[ return entity.attributes.entity_picture == null ? 'none' : 'url(' + entity.attributes.entity_picture + ')'; ]]]", 
          background-size: cover, top: 0%, left: 0%, width: 100%, filter: blur(4px), clip-path: inset(16vw 0 0 0), position: absolute]
        overlay:
          [background:
          "[[[ return entity.attributes.entity_picture == null ? 'rgba(255, 255, 255, 0.8)' : 'rgba(0, 0, 0, 0.4)'; ]]]", 
          background-size: cover, z-index: 0, top: 16vw, left: 0%, width: 100%, opacity: 1, position: absolute]
        play_pause:
          [filter: 
          "[[[ return entity.attributes.entity_picture == null ? 'none' : 'drop-shadow(0 0 1.3vw rgba(0,0,0,0.7))'; ]]]", 
          fill: '#dedede', top: 0, right: 0, bottom: 0, left: 0, margin: auto, width: 21%, height: 21%, position: absolute]
        icon:
          [fill:
          "[[[ if (entity.state === 'off' || entity.state === 'idle' || entity.state === 'standby' || entity.state === 'unavailable') return '#9da0a2'; 
          else return 'rgba(255, 255, 255, 0.8)'; ]]]", 
          top: 5.35%, left: 5.35%, width: 2.95vw, position: absolute]
      name:
        [top: 79.8%, left: 5.3%, position: absolute, line-height: 2vw, z-index: 10]
      state:
        [top: 87.5%, left: 5.3%, position: absolute, line-height: 2vw, z-index: 10, 
        white-space: nowrap, overflow: hidden, text-overflow: ellipsis, max-width: 90%]
      card: 
        [<<: *button_styles_card, background-color: none, 
        color: &media_font_color "[[[ if (entity.state === 'off' || entity.state === 'idle' || entity.state === 'standby' || entity.state === 'unavailable') { return 'rgba(255, 255, 255, 0.3)'; }
        if ((entity.state != 'off' && entity.state != 'idle' && entity.state != 'standby') && (entity.attributes.entity_picture == null)) {
        return 'rgba(0, 0, 0, 0.6)'; } else { return '#efefef'; } ]]]", 
        text-shadow: &media_text_shadow "[[[ if (entity.attributes.entity_picture == null) return 'none'; 
        else return '1px 1px 5px rgba(18, 22, 23, 0.9)' ; ]]]"]

  media_small:
    show_state: true
    show_icon: false
    tap_action: *media_tap_action
    hold_action:
      action: call-service
      service: browser_mod.popup
      service_data:
        title: '[[[ return entity.attributes.friendly_name ]]]'
        deviceID: this
        card:
          type: media-control
          entity: '[[[ return entity.entity_id ]]]'
    styles:
      custom_fields:
        icon:
          [opacity: "[[[ return entity.attributes.entity_picture == null ? 1 : 0; ]]]", 
          top: 11.5%, left: 11.5%, width: 2.9vw, position: absolute, fill: '#9da0a2']
      name: *button_styles_name
      state: *button_styles_state
      card: *button_styles_card

  person:
    #state_display: 
    show_entity_picture: true
    state:
      - value: 'home'
        styles:
          card:
            - background-color: rgba(255, 255, 255, 0.8)
          name:
            - color: rgba(0, 0, 0, 0.6)
          state:
            - color: rgba(0, 0, 0, 0.6)
          custom_fields:
            info:
              - color: '#959698'
    styles:
      entity_picture:
          [clip-path: circle(50% at center), top: 7.5%, left: 11.2%, width: 3vw, position: absolute]
      custom_fields:
        last_changed: *circle_pos
    custom_fields:
      last_changed: >
        [[[ function time(c) {
        var s = (c / 1000); var m = (c / (1000 * 60)); var h = (c / (1000 * 60 * 60)); var d = (c / (1000 * 60 * 60 * 24));
        if (s < 60) { return parseInt(s) + 's'; } else if (m < 60) { return parseInt(m) + 'm'; }
        else if (h < 24) { return parseInt(h) + 'h'; } else { return parseInt(d) + 'd'; }
        }
        const last_changed = time(Date.now() - Date.parse(states[entity.entity_id].last_changed));
        const stroke_color = entity.state === 'home' ? '#b2b2b2' : '#313638'; 
        const fill_color = entity.state === 'home' ? 'none' : '#FFFFFF08';
        return `<svg viewBox="0 0 50 50"><circle cx="25" cy="25" r="20.5" stroke="${stroke_color}" stroke-width="1.5" fill="${fill_color}" />
        <text x="50%" y="54%" fill="#8d8e90" font-size="14" text-anchor="middle" alignment-baseline="middle">${last_changed}</text></svg>`; ]]]

  loader:
    custom_fields:
      loader: >
        [[[ if (states[entity.entity_id.replace(entity.entity_id.split('.')[0], 'input_boolean')].state === 'on') { 
        return '<img src="/local/loader.svg" width="100%">'; } ]]]
    styles:
      custom_fields:
        loader:
          [filter: "[[[ return entity.state === 'off' ? 'invert(1)' : 'none'; ]]]", 
           top: 3%, left: 60%, width: 3.7vw, position: absolute, opacity: 0.6]



##########################################################################
#                                                                        #
#                              * LOVELACE *                              #
#                                                                        #
##########################################################################

title: Home
views:
  - panel: true
    path: default_view
    cards:
      - type: picture-elements
        image: /local/background.png
        style:
          .: |
            /* Global */

            #root > hui-icon-element {color: rgba(255, 255, 255, 0.1) !important; transition: 0.4s;}
            #root > hui-icon-element:hover {color: rgba(255, 255, 255, 0.25) !important; transition: none;}
            #root > hui-icon-element:active {color: rgba(255, 255, 255, 0.35) !important; transition: none;}

            #root > hui-icon-element:nth-child(10) {
              {% if states('sensor.hass_version_installed') != states('sensor.hass_version_latest') and 
              not is_state('sensor.hass_version_latest', 'unknown') or 
              not is_state('sensor.hacs', '0') and not is_state('sensor.hacs', 'unknown') %}
                color: #234e6a !important;
              {% endif %}
              }

          "#root > hui-image":
            $: |
              #image {pointer-events: none;}

          "#root > hui-markdown-card, #key1":
            $: |
              ha-card > ha-markdown {padding: 0 !important;}

          "#root > hui-markdown-card, #key2":
            $:
              "ha-card > ha-markdown":
                $: |
                  ha-markdown-element > font > ha-icon {vertical-align: 3%; opacity: 0.6;}
                  ha-markdown-element > p > span {font-family: SF Text; font-size: 5vw; 
                  font-weight: 200; margin-left: -0.3vw; letter-spacing: -0.05vw;}

          "#root > hui-state-label-element":
            $: |
              div {padding: 0 !important;}

        elements:

          # markdown fix
          - type: custom:hui-element
            card_type: markdown
            style: {opacity: 0}
            content: preload


          #################################################
          #                                               #
          #                   COVID-19                    #
          #                                               #
          #################################################

          - type: custom:hui-markdown-card
            class: coronavirus
            style:
              {top: 93.65%, left: 70.2%}
            content: >
              {% set break = ' ‍ ‍ ‍ ‍ ‍ ‍<font color="#2f3436">|</font> ‍ ‍ ‍ ‍ ‍ ‍' %}
              <font color='#6a7377'>
              <ha-icon icon="mdi:virus"></ha-icon> <b>Coronavirus</b>{{ break -}}
              <ha-icon icon="mdi:chart-bar"></ha-icon> <b>Blah blah</b>{{ break -}}
              <ha-icon icon="mdi:emoticon-sad"></ha-icon> <b>blah blah</b> {{ break -}}
              <ha-icon icon="mdi:grave-stone"></ha-icon> <b>blah blah</b> {{ break -}}
              <ha-icon icon="mdi:map-marker-radius"></ha-icon> <b>blah blah</b>
              </font>

          ##########################################################################
          #                                                                        #
          #                              * SIDEBAR *                               #
          #                                                                        #
          ##########################################################################

          - type: image
            image: local/sidebar.png
            tap_action:
              action: none
            hold_action:
              action: none
            style:
              {top: 50%, left: 10.6%, width: 21.5%, pointer-events: none, border-right: '1.5px solid rgba(58,69,73,0.2)'}

          #################################################
          #                                               #
          #                   MARKDOWN                    #
          #                                               #
          #################################################

          - type: custom:hui-markdown-card
            class: sidebar
            style:
              {top: 9%, left: 11.1%}
            content: >
              <span>{{ states('sensor.time') }}</span>


              <font color='#6a7377'><b>{{ states('sensor.sidebar_day') }}</b><br>
              <b>{{ states('sensor.sidebar_date') }}</b> </font><br> 

              <b>{{ states('sensor.sidebar_greeting') }}</b>

              <b>{{ states('sensor.sidebar_active') }}</b>

              <font color='#6a7377'>

              {{ states('sensor.sidebar_weather') }}       

              {% if is_state('binary_sensor.plex_availability', 'off') %}
              {{'\u26A0\uFE0F'}} Plex is offline...{% endif %}
              </font>

          #################################################
          #                                               #
          #                 VACUUM BUTTON                 #
          #                                               #
          #################################################

          - type: icon
            icon: custom:roborock-vacuum
            title: Dammsugare
            style:
              top: 87.41%
              left: 4.8%
              color: rgba(255, 255, 255, 0.10)
              padding: 0.8vw
              --mdc-icon-size: 4vw
            tap_action: !include popup/sidebar_information.yaml

          #################################################
          #                                               #
          #                  INFO BUTTON                  #
          #                                               #
          #################################################

          - type: icon
            icon: mdi:information-outline
            title: Information
            style:
              top: 87.41%
              left: 10.7%
              color: rgba(255, 255, 255, 0.10)
              padding: 0.8vw
              --mdc-icon-size: 4vw
            tap_action: !include popup/sidebar_information.yaml

          #################################################
          #                                               #
          #                UPDATES BUTTON                 #
          #                                               #
          #################################################

          - type: icon
            icon: mdi:arrow-up-bold-circle-outline
            title: Updates
            style:
              top: 87.41%
              left: 16.55%
              color: rgba(255, 255, 255, 0.10)
              padding: 0.8vw
              --mdc-icon-size: 4vw
            tap_action: !include popup/sidebar_update.yaml

          ##########################################################################
          #                                                                        #
          #                             * Lounge Room *                            #
          #                                                                        #
          ##########################################################################

          - prefix: Lounge Room
            <<: *title
            style:
              top: 9.15%
              left: 25.4%
              <<: *title-style

          #################################################
          #                                               #
          #                   LIGHTS                   #
          #                                               #
          #################################################

          - type: custom:button-card
            entity: light.lounge_room_lamp
            style:
              top: 20.35%
              left: 30.31%
              width: 10%
            custom_fields:
              icon_hue: &icon_hue >
                [[[ const state = entity.state === 'on' ? 'animate' : null;
                return `<svg viewBox="0 0 50 50"><style>@keyframes animate{0%{transform: scale(0.85);}20%{transform: scale(1.1);}40%{transform: scale(0.95);}60%{transform: scale(1.03);}80%{transform: scale(0.97);}100%{transform: scale(1);}}.animate{animation: animate 0.8s; transform-origin: center;}</style>
                <path fill="#9da0a2" d="M27.4 47.3h-4.9s-.7.1-.7.8.4.9.7.9h4.9c.3 0 .7-.1.7-.9s-.7-.8-.7-.8zm3.3-2.9H19.3s-.8 0-.8.8.6.9.8.9h11.5c.2 0 .8-.1.8-.9-.1-.8-.9-.8-.9-.8zm0-3H19.3s-.8 0-.8.8.6.9.8.9h11.5c.2 0 .8-.1.8-.9-.1-.8-.9-.8-.9-.8zm0-2.9H19.3s-.8 0-.8.8.6.9.8.9h11.5c.2 0 .8-.1.8-.9s-.9-.8-.9-.8zm5.2-23.2c-3.3-5.3-7-5.6-10.9-5.6-3.8 0-8.4.4-10.9 5.6-.1.1-.1.3.1.7.4.8 3.3 7.2 3.2 18.8 0 1.1-.1 1.6 0 1.7 0 .1 0 .7 1.1.7h13c1 0 1-.5 1.1-.7v-1.7c-.1-11.6 2.8-18 3.2-18.8.1-.4.1-.5.1-.7"/>
                <path class="${state}" fill="var(--button-card-light-color-no-temperature)" d="M14.1 15.3c3.4-.3 7-.4 10.9-.4 3.8 0 7.5.2 10.9.4.4-.4.7-.8.9-1.1C39 8.5 38.9 6.5 38.9 6c-.2-4.4-8.4-5-12.1-5h0-3.4c-3.7 0-12 .5-12.1 5 0 .5-.1 2.5 2.1 8.2 0 .3.3.8.7 1.1z"/></svg>`; ]]]
            styles: &icon_hue_styles
              custom_fields:
                icon_hue:
                  [top: 11%, left: 4.5%, width: 3.05vw, position: absolute]
            template: ['base','light']

          #################################################
          #                                               #
          #                      TV                       #
          #                                               #
          #################################################

          - type: custom:button-card
            entity: media_player.lounge_room_tv
            triggers_update:
              ['media_player.lounge_room_tv', 'input_boolean.lounge_room_tv']
            style:
              top: 20.35%
              left: 41.31%
              width: 10%
            tap_action: &tv_tap_action
              services: |
                [[[ if (entity.state === 'off') {
                hass.callService('input_boolean', 'turn_on', {entity_id: entity.entity_id.replace(entity.entity_id.split('.')[0], 'input_boolean')});
                hass.callService('media_player', 'turn_on', {entity_id: entity.entity_id}); }
                if (entity.state === 'on') {
                hass.callService('input_boolean', 'turn_off', {entity_id: entity.entity_id.replace(entity.entity_id.split('.')[0], 'input_boolean')});
                hass.callService('media_player', 'turn_off', {entity_id: entity.entity_id}); } ]]]
            hold_action: !include popup/lounge_room_tv.yaml
            custom_fields:
              icon_tv: &icon_tv >
                [[[ const boolean = states[entity.entity_id.replace(entity.entity_id.split('.')[0], 'input_boolean')].state;
                const style = '<style>@keyframes animate_on{from{transform: scaleY(0);}to{transform: scaleY(1);}}.animate_on{animation: animate_on 1s; transform-origin: -100% 46%; animation-fill-mode: forwards;}@keyframes animate_off{from{transform: scaleY(1);}to{transform: scaleY(0);}}.animate_off{animation: animate_off 1s; transform-origin: -100% 46%; animation-fill-mode: forwards;}</style>';
                const path = '<path d="M46 9.2v27.5H4.1V9.2H46m2.4-2.4H1.6v32.3h46.7c.1 0 .1-32.3.1-32.3zM11.9 43.2h26.3c.6 0 1.1-.4 1.1-1v-.3c0-.6-.4-1.1-1-1.1H11.9c-.6 0-1.1.4-1.1 1v.3a1.11 1.11 0 0 0 1.1 1.1z"/>';
                const gradient = '<linearGradient id="A" gradientUnits="userSpaceOnUse" x1="5.401" y1="34.714" x2="43.817" y2="11.74"><stop offset="0" stop-color="#64acb7"/><stop offset="1" stop-color="#7fdbe9"/></linearGradient>';
                if (entity.state === 'off' && boolean === 'off') { return `<svg viewBox="0 0 50 50"> ${style} ${gradient} <path class="animate_off" d="M2.9,8h44.3v29.9H2.9V8z" fill="url(#A)"/> ${path} </svg>`; }
                if (entity.state === 'on' && boolean === 'off') { return `<svg viewBox="0 0 50 50"> ${style} ${gradient} <path d="M2.9,8h44.3v29.9H2.9V8z" fill="#20262890"/><path class="animate_on" d="M2.9,8h44.3v29.9H2.9V8z" fill="url(#A)"/> ${path} </svg>`; }
                if (entity.state === 'on' && boolean === 'on') { return `<svg viewBox="0 0 50 50"> ${gradient} <path d="M2.9,8h44.3v29.9H2.9V8z" fill="url(#A)"/> ${path} </svg>`; }
                else if (entity.state==='off' && boolean==='on') { return `<svg viewBox="0 0 50 50"> ${path} </svg>`; } ]]]
            styles: &icon_tv_styles
              custom_fields:
                icon_tv:
                  [fill: "[[[ return entity.state === 'on' ? '#616161' : '#9da0a2'; ]]]", 
                  top: 7%, left: 10.7%, width: 3.5vw, position: absolute]
            template: ['base', 'switch', 'loader']

          ##########################################################################
          #                                                                        #
          #                               * Kitchen *                              #
          #                                                                        #
          ##########################################################################

          - prefix: Kitchen
            <<: *title
            style:
              top: 9.15%
              left: 50.2%
              <<: *title-style

          #################################################
          #                                               #
          #                  Pendants                     #
          #                                               #
          #################################################

          - type: custom:button-card
            entity: light.kitchen_pendant_lights
            name: Pendants
            style:
              top: 20.35%
              left: 55.18%
              width: 10%
            custom_fields:
                icon_hue: *icon_hue
            styles: *icon_hue_styles
            template: ['base', 'light']

          #################################################
          #                                               #
          #                   Downlight                   #
          #                                               #
          #################################################

          - type: custom:button-card
            entity: light.kitchen_downlight
            name: Downlight
            style:
              top: 20.35%
              left: 66.14%
              width: 10%
            custom_fields:
              icon_spot: &icon_spot >
                [[[ const state = entity.state === 'on' ? 'animate_on' : 'animate_off';
                return `<svg viewBox="0 0 50 50"><style>@keyframes animate_on{0%{transform: rotateZ(0deg); animation-timing-function: cubic-bezier(0.7, 0, 0.84, 0);}70%{transform: rotateZ(-15deg); animation-timing-function: cubic-bezier(0.16, 1, 0.3, 1);}75%{transform: rotateZ(-15deg); animation-timing-function: cubic-bezier(0.16, 1, 0.3, 1);}88%{transform: rotateZ(-11deg);}100%{transform: rotateZ(-15deg);}}.animate_on{animation: animate_on 0.7s; transform-origin: 40% 20%; animation-fill-mode: forwards; animation-delay: -0.1s;}@keyframes animate_off{0%{transform: rotateZ(-15deg); animation-timing-function: cubic-bezier(0.7, 0, 0.84, 0);}70%{transform: rotateZ(0deg); animation-timing-function: cubic-bezier(0.16, 1, 0.3, 1);}75%{transform: rotateZ(0deg); animation-timing-function: cubic-bezier(0.16, 1, 0.3, 1);}88%{transform: rotateZ(-4deg);}100%{transform: rotateZ(0deg);}}.animate_off{animation: animate_off 0.7s; transform-origin: 40% 20%; animation-fill-mode: forwards;}</style>
                <path style="clip-path: url(#mask);" fill="#9da0a2" d="M40.5.8H17.1c-.1 0-.1 0-.1.1A3.12 3.12 0 0 0 20.1 4h6.1c.1 0 .1 0 .1.1v7.4L18 19.1l3.6 3.5 9.1-8.6c.4-.4.6-1 .7-1.6V4c0-.1 0-.1.1-.1h6c1.7.1 3.1-1.3 3-3.1z"/><defs><clipPath id="mask"><path class="${state}" d="M0 9.1h24l8.3 8.8H50V-9H0z"/></clipPath></defs><path class="${state}" fill="var(--button-card-light-color-no-temperature)" d="M25.5 46.4s1.4.5 10.4-8.2c.5-.4 6.3-6.3 5.8-7.1-.7-.8-18.6-19.5-18.6-19.5s-.6-.9-8.6 6.4c-.6.5-8.7 8-7.7 9.1l18.7 19.3z"/></svg>`; ]]]
            styles: &icon_spot_styles
              custom_fields:
                icon_spot:
                  [top: 11.5%, left: 8%, width: 2.7vw, position: absolute]
            template: ['base', 'light']

          #################################################
          #                                               #
          #                   Kitchen Display             #
          #                                               #
          #################################################

          - type: custom:button-card
            entity: media_player.kitchen_display
            name: Hub
            triggers_update: ['media_player.kitchen_display', 'input_boolean.kitchen_display']
            custom_fields:
              icon: &icon_nest_mini >
                <svg viewBox="0 0 50 50"><path d="M49.7 25c0 13.6-11.1 24.7-24.8 24.7C11.3 49.7.3 38.6.3 25S11.4.3 25 .3 49.7 11.4 49.7 25zm-33.9 0a2.22 2.22 0 0 0-2.2-2.2c-1.2 0-2.3 1-2.3 2.2a2.22 2.22 0 0 0 2.2 2.2c1.3.1 2.3-.9 2.3-2.2h0zm10.8 0c0 1.2.9 2.2 2.2 2.3 1.3 0 2.3-1 2.3-2.2 0-1.3-1-2.3-2.2-2.3-1.3 0-2.3.9-2.3 2.2zm-3.2 0a2.22 2.22 0 0 0-2.2-2.2c-1.2 0-2.3 1-2.3 2.2a2.22 2.22 0 0 0 2.2 2.2c1.3 0 2.3-.9 2.3-2.2h0zm13 2.2a2.22 2.22 0 0 0 2.2-2.2c0-1.2-1-2.3-2.2-2.3a2.22 2.22 0 0 0-2.2 2.2c0 1.3 1 2.3 2.2 2.3z" /></svg>
            style:
              top: 37.9%
              left: 55.18%
              width: 10%
            template: ['base', 'media']

          ##########################################################################
          #                                                                        #
          #                               * BEDROOM *                              #
          #                                                                        #
          ##########################################################################

          - prefix: Bedroom
            <<: *title
            style:
              top: 9.15%
              left: 75.1%
              <<: *title-style

          #################################################
          #                                               #
          #                  Lamps                        #
          #                                               #
          #################################################

          - type: custom:button-card
            entity: light.bedroom_lamps
            name: Lamps
            style:
              top: 20.35%
              left: 80.05%
              width: 10%
            custom_fields:
              icon_lamp: &icon_lamp >
                [[[ const state = entity.state === 'on' ? 'animate' : null; 
                return `<svg viewBox="0 0 50 50"><style>@keyframes animate{0%{transform: scale(0.85);}20%{transform: scale(1.1);}40%{transform: scale(0.95);}60%{transform: scale(1.03);}80%{transform: scale(0.97);}}.animate{animation: animate 0.8s; transform-origin: center;}</style>
                <path fill="#9da0a2" d="M26.5 21.8l3.8-6.1H19.7l3.8 6.1c-5 .7-6.3 5.8-5.7 10.2.7 5.1 3.2 10.1 5.7 14.4H19v2.5h11.8v-2.5h-4.5C29 42 31.4 37 32.1 32c.6-4.4-.6-9.4-5.6-10.2zm3.1 9.1c-.3 4.3-2.3 8.7-4.4 12.4l-.2.1v.1-.1c-1.8-3-3.3-6.4-4.1-9.7-.7-3.1-1-7.2 2.7-8.4 1.4-.5 3.1-.1 4.2.8 1.6 1 1.8 3 1.8 4.8z"/>
                <path class="${state}" fill="var(--button-card-light-color-no-temperature)" d="M38.1 20L35.7 3.8c-.3-1.9-.4-1.7-.6-2-.9-.6-2.3-.7-2.3-.7H17.4s-1.4 0-2.3.7c-.2.3-.3.1-.6 2C14 5.7 11.9 20 11.9 20s5.8.3 13.4.3h0c7.3 0 12.8-.3 12.8-.3z"/> </svg>`;]]]
            styles: &icon_lamp_styles
              custom_fields:
                icon_lamp:
                  [top: 11%, left: 4.5%, width: 3.05vw, position: absolute]
            template: ['base', 'light']

          #################################################
          #                                               #
          #                 AIR CONDITIONER               #
          #                                               #
          #################################################

          - type: custom:button-card
            entity: climate.bedroom
            name: AC
            icon: mdi:air-conditioner
            triggers_update:
              ['climate.bedroom', 'input_boolean.climate_bedroom']
            style:
              top: 20.35%
              left: 91.05%
              width: 10%
            tap_action: !include popup/bedroom_ac.yaml
            styles: &icon_ac_styles
              custom_fields:
                icon_air_purifier:
                  [top: 11%, left: 6.3%, width: 3.05vw, position: absolute,
                  fill: "[[[ return entity.state === 'on' ? '#5daeea' : '#9da0a2'; ]]]"]
            template: ['base', 'climate']

          #################################################
          #                                               #
          #                      TV2                      #
          #                                               #
          #################################################

          - type: custom:button-card
            entity: media_player.bedroom_tv
            name: TV
            triggers_update:
              ['media_player.bedroom_tv', 'input_boolean.bedroom_tv']
            style:
              top: 37.9%
              left: 80.05%
              width: 10%
            tap_action: *tv_tap_action
            hold_action: !include popup/bedroom_tv.yaml
            custom_fields:
              icon_tv: *icon_tv
            styles: *icon_tv_styles
            template: ['base', 'switch', 'loader']

          #################################################
          #                                               #
          #                Bedroom Speaker                #
          #                                               #
          #################################################

          - type: custom:button-card
            entity: media_player.bedroom_speaker
            name: Speaker
            icon: mdi:google-home
            triggers_update: ['media_player.bedroom_speaker', 'input_boolean.bedroom_speaker']
            style:
              top: 37.9%
              left: 91.05%
              width: 10%
            template: ['base', 'media_small']

          

          ##########################################################################
          #                                                                        #
          #                               * OLLIE *                               #
          #                                                                        #
          ##########################################################################

          - prefix: Ollie's Room
            <<: *title
            style:
              top: 53.4%
              left: 50.2%
              <<: *title-style

          #################################################
          #                                               #
          #                    Lamp                       #
          #                                               #
          #################################################

          - type: custom:button-card
            entity: light.ollie_s_lamp
            name: Lamp
            style:
              top: 64.5%
              left: 55.18%
              width: 10%
            custom_fields:
              icon_lamp: *icon_lamp
            styles: *icon_lamp_styles
            template: ['base', 'light']

          #################################################
          #                                               #
          #                    Climate Ollie              #
          #                                               #
          #################################################

          - type: custom:button-card
            entity: climate.ollie_room
            name: AC
            icon: mdi:air-conditioner
            style:
              top: 64.5%
              left: 66.14%
              width: 10%
            styles: *icon_ac_styles
            template: ['base', 'climate']

          #################################################
          #                                               #
          #                   Speaker                     #
          #                                               #
          #################################################

          - type: custom:button-card
            entity: media_player.ollie_s_speaker
            name: Speaker
            icon: mdi:google-home
            style:
              top: 82.1%
              left: 55.18%
              width: 10%
            template: ['base', 'media_small']

          ##########################################################################
          #                                                                        #
          #                               * Home *                                 #
          #                                                                        #
          ##########################################################################

          - prefix: Home
            <<: *title
            style:
              top: 53.4%
              left: 75.1%
              <<: *title-style

          #################################################
          #                                               #
          #                    WILLIAM                    #
          #                                               #
          #################################################

          - type: custom:button-card
            entity: person.william
            triggers_update:
              ['person.william', 'sensor.time']
            style:
              top: 64.5%
              left: 80.05%
              width: 10%
            tap_action: !include popup/home_william.yaml
            hold_action: !include popup/home_william.yaml
            template: ['base', 'switch', 'person']

          #################################################
          #                                               #
          #                     EMILY                     #
          #                                               #
          #################################################

          - type: custom:button-card
            entity: person.emily
            triggers_update:
              ['person.emily', 'sensor.time']
            style:
              top: 64.5%
              left: 91.05%
              width: 10%
            tap_action: !include popup/home_emily.yaml
            hold_action: !include popup/home_emily.yaml
            template: ['base', 'switch', 'person']

          #################################################
          #                                               #
          #                  Close Everything             #
          #                                               #
          #################################################

          - type: custom:button-card
            entity: script.home_leave
            state_display: Auto
            style:
              top: 82.1%
              left: 80.05%
              width: 10%
            tap_action:
              action: toggle
            hold_action:
              action: none
            custom_fields:
              icon_away: >
                [[[ const state=entity.state==='on' ? 'animate' : null;
                return `<svg viewBox="0 0 50 50"><style>@keyframes animate{10%, 20%, 100%{transform: rotateZ(0deg);}30%, 50%, 70%{transform: rotateZ(7deg);}90%{transform: rotateZ(3deg);}40%, 60%, 80%{transform: rotateZ(-7deg);}}.animate{animation: animate 1.35s cubic-bezier(0.5, 1, 0.89, 1); animation-fill-mode: both; transform-origin: 70% 80%; animation-delay: 0s;}</style>
                <path class="${state}" d="M32.1 18.4s.3-1.6.7-2.1c.3-.6.9-1.4 1.6-1.8.6-.4 1.1-.7 1.4-.7s.7-.1 1 .1.6.4.8 1.3l.3 2.7.1 2.4.2 4.1c0 .3.2 3.1.2 3.3s.2 2.7.2 3.2l-.1 2.5c.1 1.6.5 3.1-.2 4.6-.6 1.4-1.7 2.7-2.9 3.6-.5.4-1.9 1.3-2.9 1.7-1.1.5-2.2.8-3.3 1.1-.5.1-1.4.4-2.3.3s-1.8-.6-2.1-1l-1.6-2.3c-.6-.8-2.1-2.3-2.3-2.5l-2.7-2.8c-.2-.2-2.7-3.5-2.9-3.8l-3.1-4.7-1.8-3.2-1.5-2.8-.9-1.8c-.1-.2-.3-1.1-.2-1.4.3-1.2 1.4-1.4 2.3-.7.3.2.9 1 1.1 1.3s6.1 8.1 6.1 8.1c.2.3.7.3.9 0s-.1-.7-.2-.9c-.4-.6-8.3-11.5-8.3-11.5s-.6-.9-.7-1.1c-.3-1.1 0-2.3 1.1-2.7s1.9.3 2.6 1.1c.3.3 8.3 11.5 8.3 11.5.2.2.3.3.5.3.3 0 .5-.4.4-.7-.1-.2-.5-.9-.5-.9L11.8 9c-.6-1-.9-2-.1-3 .7-.8 2.2-1.3 3-.2.3.3 10.1 14.3 10.1 14.3.2.2.5.4.7.3.5-.1.3-.7.1-1-.1-.2-8.4-11.8-8.4-11.8-.4-.9-.6-2 .2-2.8 1-1.1 2.5-.5 3.3.5.2.3 1 1.4 1 1.4l2.7 3.7c.1.2 3.4 4.4 3.8 4.8.9 1.1 1.8 2.2 2.7 3.2l.5.5c.1.1.1.4.1.8 0 1.3.1 2.6.1 3.9 0 .2.1.4.2.6.3.3.6.1.7-.2.1-.2 0-2.4 0-2.7-.3-.3-.5-1.3-.4-2.9zM12.2 46.9s-2.8-.8-4.8-2.7-2.6-2.7-2.8-3-1.8-3-2-3.6c-.2-.5-.2-.7.2-1 .4-.4 1-.5 1.3.1.1.2.4 1 .5 1.2s1 1.9 1.7 2.8 1.6 2.2 4.4 3.8c.6.3 1.2.6 1.9.9.3.1.6.2.8.4.1.2.1.6-.1.8-.2.4-.7.4-1.1.3zM7.1 30.7l.9 3.1c.3.7 1.1 2.3 1.9 3.3s2.4 2.6 3.4 3.2 2 1.1 3 1.5c1 .3 1.1.4 1.2.5.3.4.2 1.2-.4 1.3-.2 0-1.2 0-1.8-.3L12 41.7c-.5-.4-3.9-3.1-5.1-6S5.3 31 5.2 30.4s-.2-1.1 0-1.4c.3-.4.9-.8 1.3-.3.2.3.3.6.3.9.1 0 .2.8.3 1.1zm26.8-25s.2-.1.5-.1.8.3 1.4.7 1.9 1 3.6 2.9 2.9 3.9 3.4 5.8c.5 1.8.8 3.1.9 5.5 0 .5.1 1.6 0 1.7-.2.5-.5.7-1 .7-.6 0-.7-.5-.7-1l-.1-2.9c-.1-.6-.3-1.9-.7-2.9-.3-1-.7-2.3-1.7-3.6-.9-1.3-2.1-2.8-3.2-3.5l-2.4-1.5c-.6-.6-.7-1.2 0-1.8zm4.9-2.5s.3-.2.5-.1c.2 0 .7.3.9.4s2.1 1.3 3.6 3c1.5 1.6 3.5 5.1 3.7 7.4.1.4.2.9 0 1-.2.2-.4.4-.7.4-.2 0-.5 0-.7-.1-.1-.2-.4-1.1-.4-1.3s-.6-2-1.1-3.1C44 9.7 43.5 8.5 42 7.1s-2.2-1.9-2.8-2.2-1.1-.6-1.1-1c.1-.3.3-.6.7-.7z"/></svg>`; ]]]
            styles:
              card: [transition: all 0.3s ease-out]
              custom_fields:
                icon_away:
                  [top: 10%, left: 10.1%, width: 3.1vw, position: absolute,
                  fill: "[[[ return entity.state === 'on' ? '#516d82' : '#9da0a2'; ]]]"]
            template: ['base', 'switch']

          #################################################
          #                                               #
          #                     Home                      #
          #                                               #
          #################################################

          - type: custom:button-card
            entity: script.home_arrive
            state_display: Auto
            style:
              top: 82.1%
              left: 91.05%
              width: 10%
            tap_action:
              action: toggle
            hold_action: !include popup/hemma_data_kwh.yaml
            custom_fields:
              icon_home: >
                [[[ const state = entity.state === 'on' ? 'animate' : null;
                return `<svg viewBox="0 0 50 50"> <style>@keyframes animate{from, 20%, 40%, 60%, 80%, to{animation-timing-function: cubic-bezier(0.215, 0.61, 0.355, 1);}0%{transform: scale(0.3);}20%{transform: scale(1.1);}40%{transform: scale(0.9);}60%{transform: scale(1.03);}80%{transform: scale(0.97);}to{transform: scale(1);}}.animate{animation: animate 1s; transform-origin: center;}</style>
                <path class="${state}" d="M42.2 28.3c0-.8-.2-1-.2-1L26 12.1s-.5-.4-1-.4-1 .3-1 .3L8.2 27.1c-.4.5-.4.9-.4.9v18.3c0 1.1.9 2 1.9 2h8.2a1.47 1.47 0 0 0 1.5-1.5v-14a1.47 1.47 0 0 1 1.5-1.5h8.4a1.47 1.47 0 0 1 1.5 1.5v14a1.47 1.47 0 0 0 1.5 1.5h8.2c1.1 0 2-.9 2-1.9 0-.2-.3-18.1-.3-18.1zM7.3 25l-1.6 1.5s-.3.3-.5.3-.5 0-.8-.2c-.2-.2-2-2.8-2-2.8s-.1-.4-.1-.7c.1-.3.2-.7.3-.8.4-.1 21.5-20.1 21.5-20.1s.4-.3.9-.3c.4 0 .8.1.9.2s.5.4.5.4l8.9 8.5V6s.1-.4.2-.7c.1-.2.3-.3.4-.3s.3-.1.3-.1h3s.3.1.4.3a1.08 1.08 0 0 1 .3.7v9.8l7.2 6.9s.2.3.3.4c.1.2.1.7.1.7 0 .1-.1.4-.2.5s-1.6 2.5-1.6 2.5-.1.3-.3.3c-.2.1-.4.1-.7 0-.2-.1-.5-.4-.5-.4L26.4 9.4s-.3-.3-.5-.4-.4-.2-.8-.2-.5.1-.8.1c-.1.1-.4.3-.7.5C23.3 9.8 7.3 25 7.3 25z"/></svg>`; ]]]
            styles:
              card: [transition: all 0.3s ease-out]
              custom_fields:
                icon_home:
                  [top: 10.5%, left: 10.1%, width: 2.9vw, position: absolute,
                  fill: "[[[ return entity.state === 'on' ? '#c7983e' : '#9da0a2'; ]]]"]
            template: ['base', 'switch']
